<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sysadmin on Jelly&#39;s Book</title>
    <link>http://jellynian.me/categories/sysadmin/</link>
    <description>Recent content in Sysadmin on Jelly&#39;s Book</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 14 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://jellynian.me/categories/sysadmin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker 精简基础教程</title>
      <link>http://jellynian.me/post/2018-03-14-docker-simple-base-tutor/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jellynian.me/post/2018-03-14-docker-simple-base-tutor/</guid>
      <description>安装docker  官方文档的参考链接 https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1
 卸载旧版本docker
sudo apt-get remove docker docker-engine docker.io sudo apt install software-properties-common #安装工具  信任密钥:
 curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -  添加源:
 sudo add-apt-repository &amp;quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&amp;quot;  安装docker
sudo apt-get install docker-ce -y  默认情况下，docker 命令会使用Unix socket 与 Docker 引擎通讯。而只有root用户和docker 组的用户才可以访问 Docker 引擎的 Unix socket。出于 安全考虑，一般 Linux 系统上不会直接使用root 用户。因此，更好地做法是将 需要使用 docker 的用户加入 docker 用户组。
如果不存在docker组则建立 docker 组：</description>
    </item>
    
    <item>
      <title>Ucloud配置haproxy&#43;keepalived(利用ucloud-API实现外网浮动IP切换)</title>
      <link>http://jellynian.me/post/2018-01-27-haproxy-keepalived-ucloud/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jellynian.me/post/2018-01-27-haproxy-keepalived-ucloud/</guid>
      <description>背景 先交代下事情发生的背景，公司在使用ucloud的负载均衡产品的过程中由于某种特殊的需求必须要自建外网负载均衡器，由于ucloud的云主机使用nat地址转化技术，外网IP的数据包被转发到了内网IP，而且外网IP是与云主机绑定的，所以就不能用传统的方式实现外网haproxy服务的高可用了，但是ucloud实现了切换公网IP的api，我们让keepalived在另一台机器挂掉的时候调用api来将该机器的外网浮动IP解除绑定，然后绑定到自己身上，api切换的时间极短保证了线上负载均衡器故障能够迅速切换。
安装keepalived sudo apt update sudo apt install keepalived -y  准备脚本 下载ucloud sdk git clone https://github.com/ucloud/ucloud-sdk-python.git /etc/keepalived/script #下载ucloud python sdk 到 /etc/keepalived/script目录 cd /etc/keepalived/script # 进入 script 目录 cp config.simple.py config.py # 复制config.simple.py模板文件  编写脚本 修改 config.py 文件，
#配置公私钥&amp;quot;&amp;quot;&amp;quot; public_key = &amp;quot;&amp;quot; #你的公钥 private_key = &amp;quot;&amp;quot; #你的私钥 project_id = &amp;quot;&amp;quot; # 项目ID 请在Dashbord 上获取 &amp;quot;&amp;quot;&amp;quot; #添加以下内容 EIPID=&amp;quot;eip-lb011e&amp;quot; #你需要浮动的EIP的ID MYUHOSTID=&amp;quot;uhost-33eitwa&amp;quot; #脚本部署在这台机器的ID，可在控制台上查看 注意，你脚本部署在哪台机器这个ID就是哪台机器的ID PEERUHOSTID=&amp;quot;uhost-333xvs&amp;quot; # 另一台机器的ID REGION=&amp;quot;hk&amp;quot; #地区 Region 可在ucloud官网查阅  接下来修改 bind_eip.</description>
    </item>
    
    <item>
      <title>在Linux命令行如何执行上一条命令</title>
      <link>http://jellynian.me/post/2018-01-27-linux%E5%BF%AB%E9%80%9F%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%80%E6%9D%A1%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jellynian.me/post/2018-01-27-linux%E5%BF%AB%E9%80%9F%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%80%E6%9D%A1%E5%91%BD%E4%BB%A4/</guid>
      <description>有 4 种方法可以重复执行上一条命令：
使用上方向键，并回车执行。
按 !! 并回车执行。
输入 !-1 并回车执行。
按 Ctrl+P 并回车执行。
其中 !-2 代表执行上上条命令 !-3 代表执行上上上条命令以此类推</description>
    </item>
    
    <item>
      <title>通配符SSL证书是否支持3级子域名</title>
      <link>http://jellynian.me/post/2018-01-27-%E9%80%9A%E9%85%8D%E7%AC%A6ssl%E8%AF%81%E4%B9%A6%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%813%E7%BA%A7%E5%AD%90%E5%9F%9F%E5%90%8D/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://jellynian.me/post/2018-01-27-%E9%80%9A%E9%85%8D%E7%AC%A6ssl%E8%AF%81%E4%B9%A6%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%813%E7%BA%A7%E5%AD%90%E5%9F%9F%E5%90%8D/</guid>
      <description>所有品牌的通配符SSL证书只能支持域名本身及下一级的所有子域名，而不是无限级支持子域名。
 举例说明：
 用户为domain.com购买通配符SSL证书 *.domain.com，该证书可以保护
mail.domain.com login.domain.com test.domain.com vpn.domain.com
  但该证书无法保护3级子yum.mail.doamin.com，对于该域名证书无效。</description>
    </item>
    
  </channel>
</rss>